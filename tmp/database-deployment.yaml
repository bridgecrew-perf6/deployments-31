apiVersion: v1
kind: ConfigMap
metadata:
  creationTimestamp: null
  labels:
    io.kompose.service: database-envs-postgres-env
  name: envs-postgres-env
data:
  POSTGRES_HOST_AUTH_METHOD: trust
  POSTGRES_PASSWORD: demo
  POSTGRES_USER: aarna
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    kompose.cmd: kompose convert -f /home/anylog/deployments/docker-compose/docker-compose.yml
    kompose.version: 1.26.1 (a9d05d509)
  creationTimestamp: null
  labels:
    io.kompose.service: database
  name: database
spec:
  ports:
    - name: "postgres-port"
      port: 5432
      targetPort: 5432
  selector:
    io.kompose.service: database
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  annotations:
    kompose.cmd: kompose convert -f /home/anylog/deployments/docker-compose/docker-compose.yml
    kompose.version: 1.26.1 (a9d05d509)
  creationTimestamp: null
  labels:
    io.kompose.service: database
  name: database
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: database
  strategy:
    type: Recreate
  template:
    metadata:
      annotations:
        kompose.cmd: kompose convert -f /home/anylog/deployments/docker-compose/docker-compose.yml
        kompose.version: 1.26.1 (a9d05d509)
      creationTimestamp: null
      labels:
        io.kompose.network/frontend: "true"
        io.kompose.service: database
    spec:
      containers:
        - env:
            - name: POSTGRES_HOST_AUTH_METHOD
              valueFrom:
                configMapKeyRef:
                  key: POSTGRES_HOST_AUTH_METHOD
                  name: envs-postgres-env
            - name: POSTGRES_PASSWORD
              valueFrom:
                configMapKeyRef:
                  key: POSTGRES_PASSWORD
                  name: envs-postgres-env
            - name: POSTGRES_USER
              valueFrom:
                configMapKeyRef:
                  key: POSTGRES_USER
                  name: envs-postgres-env
          image: postgres:14.0-alpine
          livenessProbe:
            exec:
              command:
                - pg_isready
            failureThreshold: 5
            periodSeconds: 10
            timeoutSeconds: 5
          name: postgres
          ports:
            - containerPort: 5432
          resources: {}
          stdin: true
          tty: true
          volumeMounts:
            - mountPath: /var/lib/postgresql/data
              name: pgdata
      restartPolicy: Always
      volumes:
        - name: pgdata
          persistentVolumeClaim:
            claimName: pgdata
status: {}
