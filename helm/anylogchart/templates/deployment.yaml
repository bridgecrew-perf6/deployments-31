# Based On: https://medium.com/@suyashmohan/setting-up-postgresql-database-on-kubernetes-24a2a192e962
apiVersion: v1
kind: ConfigMap
metadata:
  name: postgres-configuration
  labels:
    app: postgres
data:
  POSTGRES_USER: aarna
---
apiVersion: v1
kind: Secret
metadata:
  name: secret-configs
  labels:
    app: postgres
data:
  POSTGRES_PASSWORD: cGFzc3dkCg== # passwd
---
apiVersion: v1
kind: Service
metadata:
  name: postgres
  labels:
    app: postgres
spec:
  ports:
  - port: 5432
    name: postgres
  selector:
    app: postgres
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: postgres
  labels:
    app: postgres
spec:
  serviceName: "postgres"
  replicas: 1
  selector:
    matchLabels:
      app: postgres
  template:
    metadata:
      labels:
        app: postgres
    spec:
      containers:
      - name: postgres
        image: postgres:14.0-alpine
        imagePullPolicy: IfNotPresent
        envFrom:
        - configMapRef:
            name: postgres-configuration
        env:
        - name: POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              name: secret-configs
              key: POSTGRES_PASSWORD
        ports:
        - containerPort: 5432
          name: postgres
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: gui-configuration
  labels:
    app: anylog-gui
data:
  CONN_IP: "0.0.0.0"
  GUI_PORT: "5000"
  CONFIG_FOLDER: "views"
  CONFIG_FILE: "testnet.json"
---
apiVersion: v1
kind: Service
metadata:
  name: anylog-gui
  labels:
    app: anylog-gui
spec:
  ports:
  - port: 5000
    name: anylog-gui
  selector:
    app: anylog-gui
  type: NodePort
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: anylog-gui
  labels:
    app: anylog-gui
spec:
  serviceName: "anylog-gui"
  replicas: 1
  selector:
    matchLabels:
      app: anylog-gui
  template:
    metadata:
      labels:
        app: anylog-gui
    spec:
      containers:
      - name: anylog-gui
        image: anylogco/anylog-gui:latest
        imagePullPolicy: IfNotPresent
        envFrom:
          - configMapRef:
              name: cli-configuration
        ports:
          - containerPort: 5000
            name: anylog-gui
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: cli-configuration
  labels:
    app: remote-cli
data:
  CONN_IP: "0.0.0.0"
  CLI_PORT: "8000"

---
apiVersion: v1
kind: Service
metadata:
  name: remote-cli
  labels:
    app: remote-cli
spec:
  ports:
  - port: 8000
    name: remote-cli
  selector:
    app: remote-cli
  type: NodePort
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: remote-cli
  labels:
    app: remote-cli
spec:
  serviceName: "remote-cli"
  replicas: 1
  selector:
    matchLabels:
      app: remote-cli
  template:
    metadata:
      labels:
        app: remote-cli
    spec:
      containers:
      - name: remote-cli
        image: anylogco/remote-cli:latest
        imagePullPolicy: IfNotPresent
        envFrom:
          - configMapRef:
              name: cli-configuration
        ports:
          - containerPort: 8000
            name: remote-cli
---
# Based On: https://medium.com/@suyashmohan/setting-up-postgresql-database-on-kubernetes-24a2a192e962
#apiVersion: v1
#kind: ConfigMap
#metadata:
#  name: grafana-configuration
#  labels:
#    app: grafana
#data:
#  GRAFANA_ADMIN_USER: admin
#  GRAFANA_ADMIN_PASSWORD: admin
#  GF_AUTH_DISABLE_LOGIN_FORM: "false"
#  GF_AUTH_ANONYMOUS_ENABLED: "true"
#  GF_SECURITY_ALLOW_EMBEDDING: "true"
#  GF_INSTALL_PLUGINS: simpod-json-datasource,grafana-worldmap-panel
---
#apiVersion: v1
#kind: Service
#metadata:
#  name: grafana
#  labels:
#    app: grafana
#spec:
#  ports:
#  - port: 3000
#    name: grafana
#  selector:
#    app: grafana
---
#apiVersion: apps/v1
#kind: StatefulSet
#metadata:
#  name: grafana
#  labels:
#    app: grafana
#spec:
#  serviceName: "grafana"
#  replicas: 1
#  selector:
#    matchLabels:
#      app: grafana
#  template:
#    metadata:
#      labels:
#        app: grafana
#    spec:
#      containers:
#      - name: grafana
#        image: grafana/grafana:7.5.7
#        imagePullPolicy: IfNotPresent
#        envFrom:
#        - configMapRef:
#            name: grafana-configuration
#        ports:
#        - containerPort: 3000
#          name: grafana
---
